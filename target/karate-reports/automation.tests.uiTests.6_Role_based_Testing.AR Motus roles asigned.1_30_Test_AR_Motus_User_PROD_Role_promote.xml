<testsuite failures="1" name="automation/tests/uiTests/6_Role_based_Testing/AR Motus roles asigned/1_30_Test_AR_Motus_User_PROD_Role_promote.feature" skipped="0" tests="1" time="0.077149"><testcase classname="automation.tests.uiTests.6_Role_based_Testing.AR Motus roles asigned.1_30_Test_AR_Motus_User_PROD_Role_promote" name="Test_AR test User PROD Role and promote qquser1:AR test User PROD" time="0.077149"><failure message="js failed:&#xA;&gt;&gt;&gt;&gt;&#xA;01: read('classpath:subscription.json')&#xA;&lt;&lt;&lt;&lt;&#xA;org.graalvm.polyglot.PolyglotException: not found: subscription.json&#xA;- com.intuit.karate.resource.ResourceUtils.getResource(ResourceUtils.java:126)&#xA;- com.intuit.karate.core.ScenarioFileReader.toResource(ScenarioFileReader.java:129)&#xA;- com.intuit.karate.core.ScenarioFileReader.readFileAsStream(ScenarioFileReader.java:99)&#xA;- com.intuit.karate.core.ScenarioFileReader.readFileAsString(ScenarioFileReader.java:95)&#xA;- com.intuit.karate.core.ScenarioFileReader.readFile(ScenarioFileReader.java:54)&#xA;- com.intuit.karate.core.ScenarioEngine.lambda$new$0(ScenarioEngine.java:124)&#xA;- &lt;js&gt;.:program(Unnamed:1)&#xA;&#xA;classpath:automation/tests/uiTests/6_Role_based_Testing/AR Motus roles asigned/1_30_Test_AR_Motus_User_PROD_Role_promote.feature:10">* url testsWeb ............................................................ passed
* print testsWeb .......................................................... passed
* configure ssl = true .................................................... passed
* def requestload = read('classpath:subscription.json') ................... failed

Stack Trace:
com.intuit.karate.KarateException: js failed:
&gt;&gt;&gt;&gt;
01: read('classpath:subscription.json')
&lt;&lt;&lt;&lt;
org.graalvm.polyglot.PolyglotException: not found: subscription.json
- com.intuit.karate.resource.ResourceUtils.getResource(ResourceUtils.java:126)
- com.intuit.karate.core.ScenarioFileReader.toResource(ScenarioFileReader.java:129)
- com.intuit.karate.core.ScenarioFileReader.readFileAsStream(ScenarioFileReader.java:99)
- com.intuit.karate.core.ScenarioFileReader.readFileAsString(ScenarioFileReader.java:95)
- com.intuit.karate.core.ScenarioFileReader.readFile(ScenarioFileReader.java:54)
- com.intuit.karate.core.ScenarioEngine.lambda$new$0(ScenarioEngine.java:124)
- &lt;js&gt;.:program(Unnamed:1)

classpath:automation/tests/uiTests/6_Role_based_Testing/AR Motus roles asigned/1_30_Test_AR_Motus_User_PROD_Role_promote.feature:10
	at &lt;feature&gt;.: * def requestload = read('classpath:subscription.json') (classpath:automation/tests/uiTests/6_Role_based_Testing/AR Motus roles asigned/1_30_Test_AR_Motus_User_PROD_Role_promote.feature:10:10)

* def subResponse = call read('classpath:automation/tests/apiTests/Positive_Scenarios/2_Subscription_via_api_dynamic_mapping.feature') . skipped
* def subID = subResponse.response._id .................................... skipped
Given driver testWeb ...................................................... skipped
* delay(2000) ............................................................. skipped
* def actualUrl = driver.url .............................................. skipped
* eval if (actualUrl === '') (driver.url = testWeb) ....................... skipped
* delay(1000) ............................................................. skipped
* driver.maximize() ....................................................... skipped
* refresh() ............................................................... skipped
* delay(3000) ............................................................. skipped
* def actualUrl = waitForUrl('https://auth.bmwgroup.net/') ................ skipped
* def myLowerCaseactualUrl = actualUrl.toLowerCase() ...................... skipped
* eval .................................................................... skipped
* waitFor(webLoc.open).click() ............................................ skipped
* delay(1000) ............................................................. skipped
And waitFor(webLoc.Subscription).click() .................................. skipped
And waitFor(webLoc.Find_Subscription).click() ............................. skipped
* delay(1000) ............................................................. skipped
And input(webLoc.subscriptionId, subID) ................................... skipped
And waitFor(webLoc.subSearchBtn).click() .................................. skipped
* def findMSG = scriptAll('span ', '_.textContent', function(x){ return x.contains('Please select at least one criteria') }) . skipped
* print findMSG ........................................................... skipped
And match findMSG == [] ................................................... skipped
* delay(2000) ............................................................. skipped
* script('window.scrollBy(0,900)') ........................................ skipped
* delay(1000) ............................................................. skipped
And waitFor(webLoc.btnView).click() ....................................... skipped
And waitFor(webLoc.pipeline_details_tab).click() .......................... skipped
* print 'subId:',subID .................................................... skipped
* def butttonexist = exists("{}view config") .............................. skipped
* def checkboxexist = exists("//*[@id='bmw.test.cdc.v1.mdd.tmdd01_replicatorEngine_checkBox']") . skipped
And eval if(butttonexist || checkboxexist ){karate.fail('view config is there')} . skipped
* driver.quit() ........................................................... skipped
</failure></testcase>
</testsuite>